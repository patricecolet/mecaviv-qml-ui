#!/bin/bash

# Script de test pour v√©rifier la connexion MIDI
# Usage: ./test_midi_connection.sh [port_number]

set -e

echo "üéõÔ∏è Test de connexion MIDI"
echo "========================"

# D√©tection du syst√®me d'exploitation
if [[ "$OSTYPE" == "darwin"* ]]; then
    OS="macOS"
    echo "üçé Syst√®me d√©tect√©: macOS"
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
    OS="Linux"
    echo "üêß Syst√®me d√©tect√©: Linux"
else
    echo "‚ö†Ô∏è  Syst√®me non reconnu: $OSTYPE"
    exit 1
fi

# Fonction pour lister les ports MIDI
list_midi_ports() {
    echo ""
    echo "üìã Ports MIDI disponibles:"
    echo "------------------------"
    
    if [[ "$OS" == "macOS" ]]; then
        # Sur macOS, utiliser aconnect pour lister
        aconnect -l | grep -E "(client|port)" | while read line; do
            if [[ $line =~ client[[:space:]]+([0-9]+):[[:space:]]+(.+) ]]; then
                client_num="${BASH_REMATCH[1]}"
                client_name="${BASH_REMATCH[2]}"
                echo "Client $client_num: $client_name"
            elif [[ $line =~ port[[:space:]]+([0-9]+):[[:space:]]+(.+) ]]; then
                port_num="${BASH_REMATCH[1]}"
                port_name="${BASH_REMATCH[2]}"
                echo "  Port $port_num: $port_name"
            fi
        done
    else
        # Sur Linux, utiliser aconnect
        aconnect -l
    fi
}

# Fonction pour tester un port sp√©cifique
test_port() {
    local port_num=$1
    echo ""
    echo "üß™ Test du port MIDI $port_num..."
    
    # V√©rifier si le port existe
    if aconnect -l | grep -q "port $port_num:"; then
        echo "‚úÖ Port $port_num trouv√©"
        
        # Essayer de se connecter (test de lecture)
        echo "üîç Test de lecture du port $port_num..."
        if timeout 5 aconnect -l | grep -A 10 "port $port_num:" | grep -q "connected"; then
            echo "‚úÖ Port $port_num est connect√© et actif"
        else
            echo "‚ö†Ô∏è  Port $port_num n'est pas connect√©"
        fi
    else
        echo "‚ùå Port $port_num non trouv√©"
        return 1
    fi
}

# Fonction pour tester les ports virtuels
test_virtual_ports() {
    echo ""
    echo "üîó Test des ports virtuels..."
    
    if [[ "$OS" == "macOS" ]]; then
        # Test IAC Driver sur macOS
        echo "üçé Test des ports IAC Driver..."
        IAC_CLIENT=$(aconnect -l | awk '/client [0-9]+: .IAC Driver/ {print $2}' | tr -d ':')
        if [ -n "$IAC_CLIENT" ]; then
            echo "‚úÖ IAC Driver d√©tect√© (Client: $IAC_CLIENT)"
            echo "   Ports disponibles: IAC Driver Bus 1, 2, 3, etc."
        else
            echo "‚ùå IAC Driver non d√©tect√©"
            echo "   Activez-le dans Audio MIDI Setup > Window > Show MIDI Studio"
        fi
    else
        # Test VirMIDI sur Linux
        echo "üêß Test des ports VirMIDI..."
        for VIRTNUM in 0 1 2 3; do
            VIRT_CLIENT=$(aconnect -l | awk -v n="Virtual Raw MIDI 0-$VIRTNUM" '/client [0-9]+: .Virtual Raw MIDI 0-/ {if ($0 ~ n) print $2}' | tr -d ':')
            if [ -n "$VIRT_CLIENT" ]; then
                echo "‚úÖ VirMIDI 0-$VIRTNUM disponible (Client: $VIRT_CLIENT)"
            else
                echo "‚ùå VirMIDI 0-$VIRTNUM non disponible"
            fi
        done
    fi
}

# Fonction pour tester la latence MIDI
test_midi_latency() {
    echo ""
    echo "‚è±Ô∏è  Test de latence MIDI..."
    
    # V√©rifier si midiutil est install√© (Python)
    if command -v python3 &> /dev/null; then
        echo "üêç Python3 d√©tect√© - test de latence disponible"
        echo "   Utilisez: python3 -c \"import midiutil; print('MIDI libraries disponibles')\""
    else
        echo "‚ö†Ô∏è  Python3 non d√©tect√© - test de latence limit√©"
    fi
    
    # Test simple avec aconnect
    echo "üîç Test de connectivit√© MIDI..."
    if aconnect -l &> /dev/null; then
        echo "‚úÖ Connectivit√© MIDI OK"
    else
        echo "‚ùå Probl√®me de connectivit√© MIDI"
    fi
}

# Fonction pour afficher les recommandations
show_recommendations() {
    echo ""
    echo "üí° Recommandations:"
    echo "------------------"
    
    if [[ "$OS" == "macOS" ]]; then
        echo "üçé Sur macOS:"
        echo "   - Utilisez les ports IAC Driver pour le monitoring QML"
        echo "   - Activez IAC Driver dans Audio MIDI Setup si n√©cessaire"
        echo "   - Configurez manuellement les connexions via l'interface QML"
        echo "   - Les ports VirMIDI ne sont pas disponibles par d√©faut"
    else
        echo "üêß Sur Linux:"
        echo "   - Les ports VirMIDI 0-2 et 0-3 sont recommand√©s pour QML"
        echo "   - Les ports VirMIDI 0-0 et 0-1 sont utilis√©s par Pure Data"
        echo "   - La connexion automatique est activ√©e par d√©faut"
    fi
    
    echo ""
    echo "üéõÔ∏è Pour tester avec l'application QML:"
    echo "   1. Lancez l'application QML"
    echo "   2. Appuyez sur F12 pour ouvrir le Debug Panel"
    echo "   3. Allez √† l'onglet MIDI"
    echo "   4. V√©rifiez la connexion et les donn√©es MIDI"
}

# Ex√©cution principale
main() {
    echo "üéõÔ∏è Test de connexion MIDI - $(date)"
    echo "================================"
    
    # Lister les ports disponibles
    list_midi_ports
    
    # Tester les ports virtuels
    test_virtual_ports
    
    # Tester la latence
    test_midi_latency
    
    # Si un port sp√©cifique est fourni, le tester
    if [ $# -eq 1 ]; then
        test_port $1
    fi
    
    # Afficher les recommandations
    show_recommendations
    
    echo ""
    echo "‚úÖ Test termin√©"
}

# Ex√©cuter le script principal
main "$@"
